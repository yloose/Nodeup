name: Release new version
run-name: New version release triggered by @${{ github.actor }}


on:
  workflow_dispatch
  
  
jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
       - uses: actions/checkout@v3
       
       - name: Read env variables
         run: echo VERSION=$(cat pom.xml | grep version | grep -o -P '(?<=<version>).*(?=</version>)') >> $GITHUB_ENV

       - name: Set up JDK 11
         uses: actions/setup-java@v3
         with:
          java-version: "11"
          distribution: "adopt"
      
       - name: Set up GCC
         uses: egor-tensin/setup-gcc@v1
         with:
          version: latest
          platform: x64
      
       - name: Install libpcap dependency
         run: sudo apt-get install -y libpcap-dev
         
       - name: Cache libpcap aarch64 dependency
         id: cache-libpcap
         uses: actions/cache@v3
         env:
            cache-name: cache-libpcap
         with:
            path: |
              ~/cache/libpcap/**/*
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles("~/cache/libpcap/lib/libpcap.a") }}
            
       - name: Download and compile libpcap aarch64
          if: ${{ steps.cache-libpcap.outputs.cache-hit != 'true' }}
          run: |
            sudo apt install gcc-aarch64-linux-gnu
            mkdir ~/tmp && cd ~/tmp && rm -rf ~/cache/libpcap && mkdir ~/cache/libpcap
            git clone https://github.com/the-tcpdump-group/libpcap.git && cd libpcap
            export CC=aarch64-linux-gnu-gcc
            /bin/sh ./configure --host=aarch64 --with-pcap=linux --prefix=~/cache/libpcap
            make
          
      
       - name: Build with maven for x86
         run: mvn --batch-mode --update-snapshots -P updateConfigBuilder package -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
         
       - name: Build with maven for aarch64
         run: mvn --batch-mode --update-snapshots -P aarch64 package -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
         
       - name: Generate update config.xml
         run: java -jar ./updateConfigBuilder/target/update-config-builder-jar-with-dependencies.jar
         
       - name: Release new version
         uses: "marvinpinto/action-automatic-releases@latest"
         with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "latest"
          title: "Release build ${{ env.VERSION }}"
          files: |
            LICENSE.txt
            updateConfigBuilder/target/config.xml
            server/target/nodeup-server*.jar
            bootstrap/target/nodeup-bootstrap*.jar